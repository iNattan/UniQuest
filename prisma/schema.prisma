generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int    @id @default(autoincrement())
  name          String
  email         String @unique
  password_hash String
  role          Int

  created_at          DateTime     @default(now())
  system_deleted      Int?
  system_date_deleted DateTime?
  Team                Team[]
  TeamMember          TeamMember[]

  @@map("users")
}

model Game {
  id              Int    @id @default(autoincrement())
  name            String
  min_participant Int
  max_participant Int
  first_score     Int
  second_score    Int
  third_score     Int
  general_score   Int
  category        Int

  CompetitionGames CompetitionGame[]

  system_deleted           Int?
  system_date_deleted      DateTime?
  DirectConfrontationMatch DirectConfrontationMatch[]
  AllAgainstAllMatch       AllAgainstAllMatch[]

  @@map("games")
}

model Competition {
  id                 Int      @id @default(autoincrement())
  title              String
  date_event         DateTime
  start_registration DateTime
  end_registration   DateTime
  min_participant    Int
  max_participant    Int
  local              String
  description        String?

  CompetitionGames CompetitionGame[]
  Teams            Team[]

  created_at               DateTime                   @default(now())
  system_deleted           Int?
  system_date_deleted      DateTime?
  DirectConfrontationMatch DirectConfrontationMatch[]
  AllAgainstAllMatch       AllAgainstAllMatch[]

  @@map("competitions")
}

model CompetitionGame {
  id        Int      @id @default(autoincrement())
  local     String
  date_game DateTime

  competition    Competition @relation(fields: [competition_id], references: [id])
  competition_id Int

  game    Game @relation(fields: [game_id], references: [id])
  game_id Int

  @@map("competition_games")
}

model Team {
  id Int @id @default(autoincrement())

  competition    Competition @relation(fields: [competition_id], references: [id])
  competition_id Int

  name          String
  status        Int
  situation     Int
  password_hash String?

  leader         User @relation(fields: [leader_user_id], references: [id])
  leader_user_id Int

  created_at          DateTime     @default(now())
  system_deleted      Int?
  system_date_deleted DateTime?
  TeamMember          TeamMember[]

  team1Matches           DirectConfrontationMatch[] @relation("Team1Matches")
  team2Matches           DirectConfrontationMatch[] @relation("Team2Matches")
  winnerMatches          DirectConfrontationMatch[] @relation("WinnerMatches")
  AllAgainstAllPlacement AllAgainstAllPlacement[]

  @@map("teams")
}

model TeamMember {
  id Int @id @default(autoincrement())

  user    User @relation(fields: [user_id], references: [id])
  user_id Int

  team    Team @relation(fields: [team_id], references: [id])
  team_id Int

  @@map("team_members")
}

model DirectConfrontationMatch {
  id Int @id @default(autoincrement())

  competition    Competition @relation(fields: [competition_id], references: [id])
  competition_id Int

  game    Game @relation(fields: [game_id], references: [id])
  game_id Int

  round Int
  match Int

  team1    Team? @relation("Team1Matches", fields: [team1_id], references: [id])
  team1_id Int?

  team2    Team? @relation("Team2Matches", fields: [team2_id], references: [id])
  team2_id Int?

  winner_team    Team? @relation("WinnerMatches", fields: [winner_team_id], references: [id])
  winner_team_id Int?

  @@map("direct_confrontation_matches")
}

model AllAgainstAllMatch {
  id Int @id @default(autoincrement())

  competition    Competition @relation(fields: [competition_id], references: [id])
  competition_id Int

  game    Game @relation(fields: [game_id], references: [id])
  game_id Int

  round                  Int
  AllAgainstAllPlacement AllAgainstAllPlacement[]

  @@map("all_against_all_matches")
}

model AllAgainstAllPlacement {
  id Int @id @default(autoincrement())

  match    AllAgainstAllMatch @relation(fields: [match_id], references: [id])
  match_id Int

  team    Team @relation(fields: [team_id], references: [id])
  team_id Int

  position Int
  score    Int

  @@map("all_against_all_placements")
}
